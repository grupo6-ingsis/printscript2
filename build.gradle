def versionFile = file('version.txt')
def version = versionFile.text.trim()

tasks.register('bumpVersion') {
    doLast {
        def matcher = (version =~ /(\d+)\.(\d+)\.(\d+)/)
        if (matcher.find()) {
            def major = matcher.group(1).toInteger()
            def minor = matcher.group(2).toInteger()
            def patch = matcher.group(3).toInteger()
            def newVersion = "${major}.${minor}.${patch+1}"
            versionFile.text = newVersion
            println "version updated to ${major}.${minor}.${patch+1} for next build"
        } else {
            throw new GradleException("No se encontró versión válida en version.txt")
        }
    }
}

ext {
    versionCode = version
}

subprojects {
    tasks.matching { it.name == 'publish' }.configureEach {
        dependsOn rootProject.tasks.named('bumpVersion')
    }
}

allprojects {
    version = rootProject.ext.versionCode
}
